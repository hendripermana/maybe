# New Relic configuration file for Maybe App
# This file configures the New Relic agent for production monitoring
#
# For more configuration options, see:
# https://docs.newrelic.com/docs/apm/agents/ruby-agent/configuration/ruby-agent-configuration

common: &default_settings
  # ============================== LICENSE KEY ===============================
  # You must specify the license key associated with your New Relic
  # account. This key binds your Agent's data to your account in the
  # New Relic service.
  license_key: <%= ENV['NEW_RELIC_LICENSE_KEY'] %>

  # Agent Enabled (Ruby/Rails)
  # Use this setting to force the agent to run or not run.
  # Default is true.
  agent_enabled: true

  # Application name
  app_name: <%= ENV['NEW_RELIC_APP_NAME'] || 'Maybe Finance App' %>

  # When "true", the agent collects performance data about your
  # application and reports this data to the New Relic UI at
  # https://one.newrelic.com. This global switch is normally overridden
  # for each environment below.
  monitor_mode: true

  # Ruby language agent
  enable_auto_rum: false

  # ============================== TRANSACTION TRACER ==============================
  # Transaction tracer captures deep information about slow
  # transactions and sends this to the UI on a periodic basis. The
  # transaction tracer is enabled by default. Set this to false to turn it off.
  transaction_tracer:
    enabled: true
    transaction_threshold: apdex_f
    record_sql: obfuscated
    stack_trace_threshold: 0.500

  # ============================== ERROR COLLECTOR ==============================
  # Error collector captures information about uncaught exceptions and
  # sends them to UI for viewing. The error collector is enabled by default.
  error_collector:
    enabled: true
    capture_source: true
    ignore_status_codes: 404

  # ============================== BROWSER MONITORING ==============================
  # Real User Monitoring gives you insight into the performance real users are
  # experiencing with your website. This is accomplished by measuring the time
  # it takes for your users to download and render your web pages by injecting a
  # small amount of JavaScript code into the header and footer of each page.
  browser_monitoring:
    auto_instrument: true

  # ============================== THREAD PROFILER ==============================
  thread_profiler:
    enabled: true

  # ============================== ATTRIBUTES ==============================
  attributes:
    enabled: true
    include: []
    exclude: []

  # ============================== DISTRIBUTED TRACING ==============================
  distributed_tracing:
    enabled: true

  # ============================== CUSTOM EVENTS ==============================
  custom_insights_events:
    enabled: true

  # ============================== SIDEKIQ MONITORING ==============================
  # Monitor Sidekiq background jobs
  instrumentation:
    sidekiq: auto

# Environment-specific settings
development:
  <<: *default_settings
  # NOTE: There is substantial overhead when running in developer mode.
  # Do not use for production or load testing.
  monitor_mode: false
  agent_enabled: false

test:
  <<: *default_settings
  # It doesn't make sense to report to New Relic from automated test runs.
  monitor_mode: false
  agent_enabled: false

staging:
  <<: *default_settings
  monitor_mode: true
  agent_enabled: true

production:
  <<: *default_settings
  monitor_mode: true
  agent_enabled: true
  
  # Additional production-specific settings
  log_level: info
  audit_log:
    enabled: true
  
  # High Security Mode (optional, uncomment if needed)
  # high_security: true
  
  # Custom attributes for better filtering in New Relic
  attributes:
    enabled: true
    include:
      - request.headers.user-agent
      - request.headers.referer
    exclude:
      - request.headers.authorization
      - request.headers.cookie
      - request.headers.set-cookie
