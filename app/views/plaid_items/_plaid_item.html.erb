<%# locals: (plaid_item:) %>

<%= tag.div id: dom_id(plaid_item) do %>
  <%= render Ui::CardComponent.new(
    variant: :default,
    size: :md,
    class: "mb-4"
  ) do |card| %>
    <% card.with_header do %>
      <div class="flex items-center justify-between w-full">
        <div class="flex items-center gap-3">
          <div class="flex items-center justify-center h-10 w-10 bg-primary/10 rounded-full">
            <% if plaid_item.logo.attached? %>
              <%= image_tag plaid_item.logo, class: "rounded-full h-full w-full", loading: "lazy" %>
            <% else %>
              <div class="flex items-center justify-center">
                <%= tag.p plaid_item.name.first.upcase, class: "text-primary text-sm font-medium" %>
              </div>
            <% end %>
          </div>

          <div>
            <div class="flex items-center gap-2">
              <h3 class="font-medium text-primary"><%= plaid_item.name %></h3>
              <% if plaid_item.scheduled_for_deletion? %>
                <%= render Ui::BadgeComponent.new(
                  text: "Deletion in progress...",
                  variant: :destructive
                ) %>
              <% end %>
            </div>
            
            <% if plaid_item.syncing? %>
              <div class="text-secondary flex items-center gap-1 text-sm">
                <%= render Ui::IconComponent.new(icon: "loader-2", size: :sm, class: "animate-spin") %>
                <%= tag.span t(".syncing") %>
              </div>
            <% elsif plaid_item.requires_update? %>
              <div class="text-warning flex items-center gap-1 text-sm">
                <%= render Ui::IconComponent.new(icon: "alert-triangle", size: :sm) %>
                <%= tag.span t(".requires_update") %>
              </div>
            <% elsif plaid_item.sync_error.present? %>
              <div class="flex items-center gap-1 text-sm">
                <%= render Ui::IconComponent.new(icon: "alert-circle", size: :sm) %>
                <%= tag.span t(".error"), class: "text-destructive" %>
              </div>
            <% else %>
              <p class="text-secondary text-sm">
                <%= plaid_item.last_synced_at ? t(".status", timestamp: time_ago_in_words(plaid_item.last_synced_at)) : t(".status_never") %>
              </p>
            <% end %>
          </div>
        </div>

        <div class="flex items-center gap-2">
          <% if plaid_item.requires_update? %>
            <%= render Ui::ButtonComponent.new(
              text: t(".update"),
              icon: "refresh-cw",
              variant: :secondary,
              size: :sm,
              href: edit_plaid_item_path(plaid_item),
              options: { data: { turbo_frame: "modal" } }
            ) %>
          <% elsif Rails.env.development? %>
            <%= render Ui::ButtonComponent.new(
              icon: "refresh-cw",
              variant: :outline,
              size: :sm,
              href: sync_plaid_item_path(plaid_item),
              options: { title: "Sync now" }
            ) %>
          <% end %>

          <%= render Ui::MenuComponent.new do |menu| %>
            <% menu.with_item(
              text: t(".delete"),
              icon: "trash-2",
              variant: :destructive,
              href: plaid_item_path(plaid_item),
              method: :delete,
              confirm: CustomConfirm.for_resource_deletion(plaid_item.name, high_severity: true)
            ) %>
          <% end %>
        </div>
      </div>
    <% end %>

    <% unless plaid_item.scheduled_for_deletion? %>
      <div class="space-y-4">
        <% if plaid_item.accounts.any? %>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <% plaid_item.accounts.each do |account| %>
              <%= render Ui::AccountCardComponent.new(
                account: account,
                show_balance: true,
                show_actions: true
              ) %>
            <% end %>
          </div>
        <% else %>
          <div class="p-4 flex flex-col gap-3 items-center justify-center bg-muted/20 rounded-lg">
            <%= render Ui::IconComponent.new(icon: "info", size: :lg, class: "text-muted mb-2") %>
            <p class="text-primary font-medium"><%= t(".no_accounts_title") %></p>
            <p class="text-secondary text-sm"><%= t(".no_accounts_description") %></p>
          </div>
        <% end %>
      </div>
    <% end %>
  <% end %>
<% end %>
